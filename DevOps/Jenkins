# Jenkins
https://qiita.com/nh321/items/d202ae635b520c78f035

Jenkins Plugin Managerで利用可能なRestart Safelyプラグインをインストールしました

Jenkins-> Jenkinsの管理->プラグインの管理->安全な再起動の検索->インストール。

次に、Jenkinsの管理-> "Windowsサービスとしてインストール"->インストールに移動します

その後、ダッシュボードに「安全に再起動」が表示されます。シュエタンクシンに感謝します。

# Jenkins を再起動したときに出たエラー
https://kenzo0107.hatenablog.com/entry/2016/12/09/135546

$ sudo chown -R jenkins:jenkins /var/lib/jenkins/plugins


# Jenkins2でジョブごとに権限を設定する
https://www.karakaram.com/jenkins2-permission-for-each-job/

# cannot-run-ant
http://1000k.github.io/2013/07/02/jenkins-user-cannot-run-ant/

# start
https://sre.leprofront.tech/index.php/sre/ci-cd/jenkins/jenkins-stop-start-restart/
Jenkinsに管理者でログインしURLを叩くことで停止や再起動を行うことができます。

exit

http://<jenkins.server>/exit
safe exit

http://<jenkins.server>/safeExit
quiet down

http://<jenkins.server>/quietDown
cancel quiet down

http://<jenkins.server>/cancelQuietDown
restart

http://<jenkins.server>/restart
safe restart

http://<jenkins.server>/safeRestart


```
https://qiita.com/notona/items/ff96837182408b10a271
Jenkins サーバーを移転したいとき

以下の手順だけでできます。シンプル。
「Jenkins の管理」->「シャットダウンの準備」を押す。すべてのジョブが終了するのを待つ。
Jenkins を終了する /etc/init.d/jenkins stop
JENKINS_HOME（デフォルトは /var/lib/jenkins） を移転先のサーバーに rsync する。
移転先の Jenkins を起動 /etc/init.d/jenkins start
このやり方の問題点は設定されているジョブ数が多いサーバーだとすべてのジョブが同時に移動することになってしまうので、そこはちょっと怖いというところですね。。
```

# php
which php

sudo ln -s /usr/bin/php /usr/local/bin/php

https://webkaru.net/linux/sudo-user-add/

# Jenkins移行方法 ok
https://symfoware.blog.fc2.com/blog-entry-2430.html

```
JENKINS_HOME has a fairly obvious directory structure that looks like the following:
JENKINS_HOME
 +- config.xml     (jenkins root configuration)
 +- *.xml          (other site-wide configuration files)
 +- userContent    (files in this directory will be served under your http://server/userContent/)
 +- fingerprints   (stores fingerprint records)
 +- nodes          (slave configurations)
 +- plugins        (stores plugins)
 +- secrets        (secretes needed when migrating credentials to other servers)
 +- workspace (working directory for the version control system)
     +- [JOBNAME] (sub directory for each job)
 +- jobs
     +- [JOBNAME]      (sub directory for each job)
         +- config.xml     (job configuration file)
         +- latest         (symbolic link to the last successful build)
         +- builds
             +- [BUILD_ID]     (for each build)
                 +- build.xml      (build result summary)
                 +- log            (log file)
                 +- changelog.xml  (change log)

Jenkinsのジョブをエクスポートして別のJenkinsサーバにインポートする方法
サーバAのProject hogeをサーバBのProject fugaへ。

Bで空のproject fugaを作ります。

AのC:\Program Files (x86)\Jenkins\jobs\hoge\config.xmlを、

BのC:\Program Files (x86)\Jenkins\jobs\fugaにコピーします。

https://B:8080/safeRestartで再起動します。
```

https://www.kwbtblog.com/entry/2019/03/13/160120

# https://plugins.jenkins.io/job-import-plugin/
プラグイン

サイドメニューより、「Jenkinsの管理」- 「プラグインの管理」を選択し、プラグインマネージャー画面を表示。

# プラグインのインストール
https://qiita.com/tnishi91/items/c35a536cb5e35c09af7d

Jenkinsで他のJenkinsにジョブをインポートする方法
■実施方法
Jenkinsのデータがある「jobs」ディレクトリ配下のジョブ名のディレクトリをコピー（またはリモードサーバに転送）
例えば「/root/.jenkins/jobs/job_name」など
コピー（または転送）を実施したあとにインポートする側のJenkinsの再起動を実施
コピーしたディレクトリ名のジョブをUI上で確認

以上です、簡単

上記の動作からJenkinsが同名のジョブを持つことができないのも納得かと思います
※同一ディレクトリ配下に同名のディレクトリを作成することはできないので

あとポイントとしてはディレクトリの権限で

Jenkins自体の動作はjenkinsユーザで行っているのにコピー作業をrootユーザで実施してしまったためにインポートしたジョブの権限がrootになってしまった

なんてことが発生しJenkinsがうまく起動できないことがあると思います
そんな場合は「chown -R jenkins:jenkins copy_job_name」などと実行してコピーしたジョブのディレクトリとその配下全体をjenkinsユーザの権限にしてから再起動すればOKです

# Jenkinsのジョブを別のJenkinsサーバにコピーする方法
https://www.it-swarm-ja.tech/ja/jenkins/jenkins%e3%81%ae%e3%82%a8%e3%82%af%e3%82%b9%e3%83%9d%e3%83%bc%e3%83%88%e3%82%a4%e3%83%b3%e3%83%9d%e3%83%bc%e3%83%88%e3%82%b8%e3%83%a7%e3%83%96/941097416/
