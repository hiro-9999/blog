agenda
https://www.droidcon-boston.com/agenda/
calderwood pavilion (at the boston center for the arts - bca)


MotionLayout：
https://qiita.com/keijumt/items/bd9e9e1033dcf686b8ee
https://medium.com/eureka-engineering/android-motionlayout-b0d8dd498aec

https://github.com/googlesamples/android-ConstraintLayoutExamples
https://www.youtube.com/watch?v=N_x7SV3I3P0

モザイクをかけたい
https://qiita.com/furu8ma/items/2ae3bd8a1e9d18707c64

Slid:
https://github.com/Droidcon-Boston/slides/tree/master/2019
http://tech.connehito.com/entry/2019/04/15/135638

soft：
https://mobirise.com/zh/


https://www.droidcon-boston.com/speakers/


http://www.hatena.ne.jp/

//head picture and vedio
https://www.youtube.com/channel/UClv2UAFbLxopI8_9fscZ-ew

github:
https://github.com/Droidcon-Boston/slides/tree/master/2019
https://twitter.com/search?q=place%3A07d9c92f6ec83001
https://twitter.com/droidconbos

DEMO:
https://github.com/mikescamell/Loco-MotionLayout
https://www.slideshare.net/mscamell/do-the-locomotionlayout-building-animations-with-motionlayout
https://twitter.com/MikeScamell

All sild:
https://speakerdeck.com/mikescamell/do-the-loco-motionlayout-droidcon-boston-2019
https://speakerdeck.com/ricknout/setting-up-a-material-components-for-android-theme?slide=33

picture:
https://www.instagram.com/p/Bv_7zjngHDB/?utm_source=ig_twitter_share&igshid=2f1se9z2qhw3
https://twitter.com/droidconbos

Full-stack:
https://www.publickey1.jp/blog/13/post_230.html

twitter:
https://twitter.com/hashtag/DroidconBos19?src=hash

blog:
以下はDroidConBos 2019の参加報告を記事しました。
https://yamaguchidmm.hateblo.jp/entry/2019/04/15/191337

youtub:
https://www.youtube.com/channel/UC_LIW0OUdsRI21D0xnWkexw/videos

androidresources:
https://androidresources.net/authors/letter-c.html
https://androidresources.net/#/

MotionLayout:
https://qiita.com/keijumt/items/bd9e9e1033dcf686b8ee
https://github.com/googlesamples/android-architecture-components/tree/master/WorkManagerSample

WorkManager:
https://qiita.com/ikemura23/items/e67634dafd537243327b
WorkManager APIを使用すると、遅延タスク、非同期タスク、および実行するタイミングを簡単に指定できます。これらのAPIを使用すると、タスクを作成し、
即時または適切なタイミングでWorkManagerに渡すことができます。
デバイスAPIレベルやアプリ状態などの要因に基づいて、タスクを実行するための適切な方法を選択します。
アプリケーションの実行中にWorkManagerがいずれかのタスクを実行すると、WorkManagerはアプリケーションのプロセス内の新しいスレッドでタスクを実行できます。
あなたのアプリが実行されていない場合、ワークマネージャは、バックグラウンドタスクをスケジュールするための適切な方法を選択します-デバイスの
APIレベルに応じたとの依存関係を含め、ワークマネージャが使用する可能性のある JobScheduler、Firebase JobDispatcherを、かAlarmManager。

JobScheduler
https://qiita.com/kofuk/items/d32dbd05b70c0fa73010


Build a complete native mobile app with NativeScript-Vue:
https://medium.com/learning-lab/lessons-learned-on-writing-apps-with-nativescript-vuejs-bd6a3066f0cb
https://www.nativescript.org/vue

AutoML:　https://cloud.google.com/automl/
https://cloudplatform-jp.googleblog.com/2018/03/automl-vision-in-action-from-ramen-to-branded-goods.html
https://www.codexa.net/google-automl-things-to-know/
https://www.apps-gcp.com/cloud-automl-vision/

Kotlin supports Domain Specific Languages (DSLs) ：
https://dev.classmethod.jp/smartphone/kotlin-dsl-2/
https://blog.shazam.com/a-kotlin-dsl-for-acceptance-tests-8a825388879e
https://wajahatkarim.com/2018/04/domain-specific-language-dsl-using-kotlin/
https://engineering.linecorp.com/ja/blog/kotlin-dsl-and-script-engine/
https://improve-future.com/kotlin-dsl.html
https://www.jianshu.com/p/2205b4e26879

ANKO
https://blog.csdn.net/qq_36875339/article/details/78611249
https://github.com/Kotlin/anko
https://speakerdeck.com/yagi2/understanding-kotlin-dsl?slide=21

Android routines on coroutines
https://gumiossan.hatenablog.com/entry/2018/12/24/235037
